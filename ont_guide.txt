Loading ontology from test.owl...
Successfully loaded ontology: http://example.com/manufacturing_ontology.owl#

================================================================================
ONTOLOGY ANALYSIS: test.owl
================================================================================

--- NAMESPACES ---
test: http://example.com/manufacturing_ontology.owl#
rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
rdfs: http://www.w3.org/2000/01/rdf-schema#
owl: http://www.w3.org/2002/07/owl#
xsd: http://www.w3.org/2001/XMLSchema#

Base IRI: http://example.com/manufacturing_ontology.owl#

--- CLASSES (15) ---
├─ Area (1 instances, 0 subclasses)
├─ ProcessCell (1 instances, 0 subclasses)
├─ Plant (1 instances, 0 subclasses)
├─ Equipment (61 instances, 0 subclasses)
├─ ProductionLine (12 instances, 0 subclasses)
├─ EventRecord (5450 instances, 0 subclasses)
├─ ProductionLineOrEquipment (0 instances, 0 subclasses)
├─ EquipmentClass (61 instances, 0 subclasses)
├─ TimeInterval (5450 instances, 0 subclasses)
├─ Shift (9 instances, 0 subclasses)
├─ OperationalState (9 instances, 0 subclasses)
├─ OperationalReason (196 instances, 0 subclasses)
├─ Material (35 instances, 0 subclasses)
├─ ProductionRequest (37 instances, 0 subclasses)
├─ PersonnelClass (0 instances, 0 subclasses)

--- OBJECT PROPERTIES (29) ---
├─ hasProcessCell (inverse: partOfArea)
│  ├─ Domain: Area
│  └─ Range: ProcessCell
├─ partOfArea (inverse: hasProcessCell)
│  ├─ Domain: ProcessCell
│  └─ Range: Area
├─ locatedInPlant (inverse: hasArea)
│  ├─ Domain: Area
│  └─ Range: Plant
├─ hasArea (inverse: locatedInPlant)
│  ├─ Domain: Plant
│  └─ Range: Area
├─ isPartOfProductionLine (inverse: hasEquipmentPart)
│  ├─ Domain: Equipment
│  └─ Range: ProductionLine
├─ hasEquipmentPart (inverse: isPartOfProductionLine)
│  ├─ Domain: ProductionLine
│  └─ Range: Equipment
├─ involvesResource (inverse: resourceInvolvedIn)
│  ├─ Domain: EventRecord
│  └─ Range: ProductionLineOrEquipment
├─ resourceInvolvedIn (inverse: involvesResource)
│  ├─ Domain: ProductionLineOrEquipment
│  └─ Range: EventRecord
├─ containsProductionLine (inverse: locatedInProcessCell)
│  ├─ Domain: ProcessCell
│  └─ Range: ProductionLine
├─ locatedInProcessCell (inverse: containsProductionLine)
│  ├─ Domain: ProductionLine
│  └─ Range: ProcessCell
├─ memberOfClass [Functional] (inverse: hasInstance)
│  ├─ Domain: Equipment
│  └─ Range: EquipmentClass
├─ hasInstance (inverse: memberOfClass)
│  ├─ Domain: EquipmentClass
│  └─ Range: Equipment
├─ equipmentIsDownstreamOf [Transitive, Symmetric, Asymmetric] (inverse: equipmentIsDownstreamOf)
│  ├─ Domain: Equipment
│  └─ Range: Equipment
├─ equipmentIsUpstreamOf [Transitive, Symmetric, Asymmetric] (inverse: equipmentIsUpstreamOf)
│  ├─ Domain: Equipment
│  └─ Range: Equipment
├─ isParallelWith [Symmetric, Reflexive, Irreflexive] (inverse: isParallelWith)
│  ├─ Domain: Equipment
│  └─ Range: Equipment
├─ classIsDownstreamOf [Transitive, Symmetric, Asymmetric] (inverse: classIsDownstreamOf)
│  ├─ Domain: EquipmentClass
│  └─ Range: EquipmentClass
├─ classIsUpstreamOf [Transitive, Symmetric, Asymmetric] (inverse: classIsUpstreamOf)
│  ├─ Domain: EquipmentClass
│  └─ Range: EquipmentClass
├─ hasDetailedEquipmentEvent (inverse: isPartOfLineEvent)
│  ├─ Domain: EventRecord
│  └─ Range: EventRecord
├─ isPartOfLineEvent (inverse: hasDetailedEquipmentEvent)
│  ├─ Domain: EventRecord
│  └─ Range: EventRecord
├─ occursDuring [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: TimeInterval
├─ duringShift [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: Shift
├─ eventHasState [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: OperationalState
├─ eventHasReason [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: OperationalReason
├─ producedMaterial (inverse: isMaterialProducedIn)
│  ├─ Domain: EventRecord
│  └─ Range: Material
├─ isMaterialProducedIn (inverse: producedMaterial)
│  ├─ Domain: Material
│  └─ Range: EventRecord
├─ consumedMaterial (inverse: isMaterialConsumedIn)
│  ├─ Domain: EventRecord
│  └─ Range: Material
├─ isMaterialConsumedIn (inverse: consumedMaterial)
│  ├─ Domain: Material
│  └─ Range: EventRecord
├─ associatedRequest (inverse: hasAssociatedEvent)
│  ├─ Domain: EventRecord
│  └─ Range: ProductionRequest
├─ hasAssociatedEvent (inverse: associatedRequest)
│  ├─ Domain: ProductionRequest
│  └─ Range: EventRecord

--- DATA PROPERTIES (58) ---
├─ aeModelCategory
│  ├─ Domain: EventRecord
│  └─ Range: <class 'str'>
├─ allMaintenanceTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ autonomousMaintenanceTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ businessExternalTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ originalChangeoverType
│  ├─ Domain: OperationalReason
│  └─ Range: <class 'str'>
├─ changeoverType
│  ├─ Domain: OperationalReason
│  └─ Range: <class 'str'>
├─ complexity
│  ├─ Domain: Equipment
│  └─ Range: <class 'str'>
├─ personnelClassId [Functional]
│  ├─ Domain: PersonnelClass
│  └─ Range: <class 'str'>
├─ downtimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ downtimeDriver
│  ├─ Domain: OperationalReason
│  └─ Range: <class 'str'>
├─ effectiveRuntimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ equipmentId [Functional]
│  ├─ Domain: Equipment
│  └─ Range: <class 'str'>
├─ equipmentModel [Functional]
│  ├─ Domain: Equipment
│  └─ Range: <class 'str'>
├─ equipmentName
│  ├─ Domain: Equipment
│  └─ Range: <class 'str'>
├─ equipmentClassId [Functional]
│  ├─ Domain: EquipmentClass
│  └─ Range: <class 'str'>
├─ processCellId [Functional]
│  ├─ Domain: ProcessCell
│  └─ Range: <class 'str'>
├─ areaCategoryCode [Functional]
│  ├─ Domain: Area
│  └─ Range: <class 'str'>
├─ areaId [Functional]
│  ├─ Domain: Area
│  └─ Range: <class 'str'>
├─ goodProductionQuantity [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'int'>
├─ endTime [Functional]
│  ├─ Domain: TimeInterval
│  └─ Range: <class 'datetime.datetime'>
├─ startTime [Functional]
│  ├─ Domain: TimeInterval
│  └─ Range: <class 'datetime.datetime'>
├─ lineId [Functional]
│  ├─ Domain: ProductionLine
│  └─ Range: <class 'str'>
├─ materialId [Functional]
│  ├─ Domain: Material
│  └─ Range: <class 'str'>
├─ materialUOM [Functional]
│  ├─ Domain: Material
│  └─ Range: <class 'str'>
├─ alternativeModel
│  ├─ Domain: Equipment
│  └─ Range: <class 'str'>
├─ actualSequencePosition [Functional]
│  ├─ Domain: Equipment
│  └─ Range: <class 'int'>
├─ defaultSequencePosition [Functional]
│  ├─ Domain: EquipmentClass
│  └─ Range: <class 'int'>
├─ notEnteredTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ operationType
│  ├─ Domain: EventRecord
│  └─ Range: <class 'str'>
├─ areaPhysicalCategoryName
│  ├─ Domain: Area
│  └─ Range: <class 'str'>
├─ plannedMaintenanceTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ plantId [Functional]
│  ├─ Domain: Plant
│  └─ Range: <class 'str'>
├─ plantAvailableTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ plantDecisionTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ plantExperimentationTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ conversionFactor [Functional]
│  ├─ Domain: Material
│  └─ Range: <class 'float'>
├─ productionAvailableTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ requestDescription
│  ├─ Domain: ProductionRequest
│  └─ Range: <class 'str'>
├─ requestId [Functional]
│  ├─ Domain: ProductionRequest
│  └─ Range: <class 'str'>
├─ requestRate [Functional]
│  ├─ Domain: ProductionRequest
│  └─ Range: <class 'float'>
├─ requestRateUOM [Functional]
│  ├─ Domain: ProductionRequest
│  └─ Range: <class 'str'>
├─ rampUpFlag [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'bool'>
├─ rejectProductionQuantity [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'int'>
├─ runTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ shiftDurationMinutes [Functional]
│  ├─ Domain: Shift
│  └─ Range: <class 'float'>
├─ shiftEndTime [Functional]
│  ├─ Domain: Shift
│  └─ Range: <class 'datetime.datetime'>
├─ shiftId [Functional]
│  ├─ Domain: Shift
│  └─ Range: <class 'str'>
├─ shiftStartTime [Functional]
│  ├─ Domain: Shift
│  └─ Range: <class 'datetime.datetime'>
├─ materialDescription
│  ├─ Domain: Material
│  └─ Range: <class 'str'>
├─ sizeType
│  ├─ Domain: Material
│  └─ Range: <class 'str'>
├─ reportedDurationMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ targetProductUOM [Functional]
│  ├─ Domain: Material
│  └─ Range: <class 'str'>
├─ standardUOM [Functional]
│  ├─ Domain: Material
│  └─ Range: <class 'str'>
├─ altReasonDescription
│  ├─ Domain: OperationalReason
│  └─ Range: <class 'owlready2.util.locstr'>
├─ reasonDescription
│  ├─ Domain: OperationalReason
│  └─ Range: <class 'str'>
├─ stateDescription
│  ├─ Domain: OperationalState
│  └─ Range: <class 'str'>
├─ waitingTimeMinutes [Functional]
│  ├─ Domain: EventRecord
│  └─ Range: <class 'float'>
├─ associatedLineId [Functional]
│  ├─ Domain: Equipment
│  └─ Range: <class 'str'>

--- INDIVIDUALS (11323) ---
Top 5 classes by individual count:
├─ EventRecord: 5450 individuals
├─ TimeInterval: 5450 individuals
├─ OperationalReason: 196 individuals
├─ EquipmentClass: 61 individuals
├─ Equipment: 61 individuals

Sample individual properties:
├─ Plant_MX11 has 87 properties
│  ├─ hasProcessCell
│  ├─ partOfArea
│  ├─ locatedInPlant
│  ├─ hasArea
│  └─ isPartOfProductionLine
│  └─ ... and 82 more

--- CLASS RESTRICTIONS (0) ---
No class restrictions found in the ontology.

--- SPARQL QUERY TEMPLATES (4) ---

1. List individuals of a class:

PREFIX onto: <http://example.com/manufacturing_ontology.owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual 
WHERE {
    ?individual rdf:type onto:Area .
}
LIMIT 10


2. Query by object property:

PREFIX onto: <http://example.com/manufacturing_ontology.owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?subject ?object
WHERE {
    ?subject rdf:type onto:Area .
    ?object rdf:type onto:ProcessCell .
    ?subject onto:hasProcessCell ?object .
}
LIMIT 10


3. Query by data property:

PREFIX onto: <http://example.com/manufacturing_ontology.owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual ?value
WHERE {
    ?individual rdf:type onto:EventRecord .
    ?individual onto:aeModelCategory ?value .
}
LIMIT 10


4. Complex query:

PREFIX onto: <http://example.com/manufacturing_ontology.owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?individual1 ?individual2
WHERE {
    ?individual1 rdf:type onto:Area .
    ?individual2 rdf:type onto:ProcessCell .
    ?individual1 onto:hasProcessCell ?individual2 .
}
LIMIT 10


================================================================================
END OF ANALYSIS
================================================================================
